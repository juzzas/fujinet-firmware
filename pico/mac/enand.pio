;
; FujiNet Project
;
; Vintage Macintosh Microfloppy Controller Interface
;
; "AND" the two /ENABLE lines by nor-ing the inverted inputs
; input  ~in   out
; ----- -----  ---
;  0 0   1 1    0
;  0 1   1 0    0
;  1 0   0 1    0
;  1 1   0 0    1
;
; do this 
;

.program enand
.side_set 1 opt
loop:
    ; put the two ENABLE lines in x, inverting them
    mov osr, ~pins 
    out x, 2
    jmp !x out1
    jmp loop       side 0
out1: 
    jmp loop       side 1
    ; jmp to output 1 if both are 0 (i.e., because original values are 1 & 1)
    ; otherwise output a 0 (because at least one of them is 1 - original value of 0)
 
% c-sdk {
// this is a raw helper function for use by the user which sets up the GPIO input and output, and configures the SM to output on a particular pin

void enand_program_init(PIO pio, uint sm, uint offset, uint in_pin, uint out_pin) {
   // configure a SM
   pio_sm_config c = enand_program_get_default_config(offset);
   // config side set
   sm_config_set_sideset_pins(&c, out_pin);
   sm_config_set_in_pins(&c, in_pin); 
   sm_config_set_out_shift(&c, true, false, 0);
   pio_gpio_init(pio, out_pin);
   pio_sm_set_consecutive_pindirs(pio, sm, out_pin, 1, true);
   // initialize
   pio_sm_init(pio, sm, offset, &c);
}
%}